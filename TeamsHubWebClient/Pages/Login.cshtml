@page
@model TeamsHubWebClient.Pages.LoginModel
@{
    Layout = null;
    ViewData["Title"] = "Login";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <link rel="stylesheet" href="/css/loginStyles.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body>
    <div class="background">
        <div class="container">
            <img src="/images/Team_Hub-removebg-preview.png" alt="Team Hub" class="logo">
            <div class="overlay">
                <div class="form-container">
                    <form method="post" id="login-form">
                        <h1 class="title">Sign in</h1>
                        <p class="subtitle">Por favor ingrese su correo y contraseña</p>
                        <div class="input-group">
                            <img src="/images/ICON-EMAIL.png" alt="Email Icon" class="icon">
                            <input type="email" placeholder="Email" class="input" id="txtEmail" required="required"
                                maxlength="30" asp-for="sessionLoginRequest.Email">
                            <span asp-validation-for="sessionLoginRequest.Email" class="text-danger"></span>
                        </div>
                        <div class="input-group">
                            <img src="/images/ICON-PASSWORD.png" alt="Password Icon" class="icon">
                            <input type="password" placeholder="Password" class="input" id="txtPassword"
                                required="required" maxlength="20" asp-for="sessionLoginRequest.Password">
                            <span asp-validation-for="sessionLoginRequest.Password" class="text-danger"></span>
                            <label for="showPassword" id="togglePassword" class="show-password">Mostrar</label>
                        </div>
                        <div class="button-group">
                            <button type="submit" class="sign-in-button">Sign in</button>
                        </div>
                    </form>
                </div>
            </div>
            <p class="register-text">
                ¿Aun no cuentas con una cuenta? <a href="/RegisterUserModule">Registrarse aquí</a>
            </p>
            <p class="forgot-password"><a href="javascript:void(0);" onclick="PasswordRecovery()">¿Olvidaste tu
                    contraseña?</a></p>
        </div>
    </div>

    @if (TempData["Message"] != null && TempData["Title"] != null)
    {
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                Swal.fire({
                    icon: "error",
                    title: "@TempData["Title"]",
                    text: "@TempData["Message"]",
                });
            });
        </script>
    }

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var togglePassword = document.getElementById('togglePassword');
            var passwordField = document.getElementById('txtPassword');

            togglePassword.addEventListener('click', function () {
                var passwordFieldType = passwordField.getAttribute('type');
                if (passwordFieldType === 'password') {
                    passwordField.setAttribute('type', 'text');
                    togglePassword.textContent = 'Ocultar';
                } else {
                    passwordField.setAttribute('type', 'password');
                    togglePassword.textContent = 'Mostrar';
                }
            });
        });

        function PasswordRecovery() {
            Swal.fire({
                title: "Recuperar contraseña",
                text: "Para recuperar su contraseña, por favor ingrese el correo electrónico con " +
                    "el que se registró. Le enviaremos su contraseña a esa dirección.",
                input: "email",
                inputAttributes: {
                    autocapitalize: "off"
                },
                showCancelButton: true,
                confirmButtonText: "Enviar",
                showLoaderOnConfirm: true,
                preConfirm: async (email) => {

                    if (!email) {
                        Swal.showValidationMessage('El correo electrónico es obligatorio');
                        return;
                    }

                    try {
                        const response = await fetch("/TeamHub/Users/RecoveryPassword/" + email, {
                            method: "GET",
                            headers: {
                                "Content-Type": "application/json"
                            },
                        });

                        if (!response.ok) {
                            const errorData = await response.json();
                            return Swal.showValidationMessage(`Error: ${errorData.message || response.statusText}`);
                        }

                        const result = await response.json();
                        return result;

                    } catch (error) {
                        return Swal.showValidationMessage(`Request failed: ${error}`);
                    }
                },
                allowOutsideClick: () => !Swal.isLoading()
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: "Correo enviado",
                        text: "Si el correo electrónico está registrado, recibirá un correo con instrucciones para recuperar su contraseña.",
                        icon: "success"
                    });
                }
            });
        }
    </script>

</body>

</html>
