@page
@model IndexModel
@using TeamsHubWebClient.DTOs
@using TeamsHubWebClient.SinglentonClasses;

<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Proyectos</title>
    <link rel="stylesheet" href="/css/indexStyles.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body>
    <div class="background">

        <div class="container">

            <div class="header">
                <h1>Mi Espacio de trabajo</h1>
                <div class="header-buttons">
                    <button class="new-project-button" onclick="showNewForm()">Nuevo Proyecto</button>
                    <div class="user-button">
                        <img src="https://cdn-icons-png.flaticon.com/512/3135/3135715.png" alt="User Icon"
                            class="user-icon">
                        <span>@StudentSinglenton.FullName</span>
                        <div class="dropdown-content">
                            <button onclick="ShowUserProfileForm()">
                                <img src="https://cdn-icons-png.flaticon.com/512/3135/3135715.png" alt="Profile Icon"
                                    class="icon"> Mi perfil
                            </button>
                            <button onclick="location.href='/Login'">
                                <img src="https://cdn-icons-png.flaticon.com/512/603/603120.png" alt="Logout Icon"
                                    class="icon"> Log out
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="projects-list column">
                @if (Model.Projects != null)
                {
                    @foreach (var project in Model.Projects)
                    {
                        <div class="project-card">
                            <div class="project-info">
                                <img src="https://cdn-icons-png.flaticon.com/512/4946/4946348.png" alt="Project Icon">
                                <div>
                                    <h2>@project.Name</h2>
                                    <p><span>Fecha de inicio:</span> @project.StartDate?.ToString("yyyy-MM-dd")</p>
                                    <p><span>Fecha de cierre:</span> @project.EndDate?.ToString("yyyy-MM-dd")</p>
                                </div>
                            </div>
                            <div class="project-status">
                                <p>Estatus: <span>@project.Status</span></p>
                                <div class="action-buttons">
                                    <img src="/images/ICON-DELETEPROJECT.png" alt="Delete Icon" class="Delete-icon"
                                        onclick="DeleteProject('@project.IdProject')">
                                    <img src="https://cdn-icons-png.flaticon.com/512/1160/1160515.png" alt="Edit Icon"
                                        class="edit-icon"
                                        onclick="showEditForm('@project.IdProject', '@project.Name', '@project.StartDate', '@project.EndDate', '@project.Status')">
                                    <form method="post" asp-page-handler="Move">
                                        <input type="hidden" name="IdProject" value="@project.IdProject" />
                                        <input type="hidden" name="NameProject" value="@project.Name" />
                                        <button type="submit" class="details-button">Ver más</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>

    <div class="project-form" id="newProjectForm">
        <button class="close-form" onclick="hideNewForm()">&#x2190;</button>
        <h2>Formulario Proyecto</h2>
        <form method="post" onsubmit="return validateNewProjectForm()">
            <label for="projectName">Nombre del Proyecto</label>
            <input type="text" id="projectName" name="ProjectDTO.Name" required maxlength="50">
            <label for="startDate">Fecha de Inicio</label>
            <input type="date" id="startDate" name="ProjectDTO.StartDate" required readonly
                onfocus="this.removeAttribute('readonly');">
            <label for="endDate">Fecha de Cierre</label>
            <input type="date" id="endDate" name="ProjectDTO.EndDate" required readonly
                onfocus="this.removeAttribute('readonly');">
            <label for="status">Estatus</label>
            <select id="status" name="ProjectDTO.Status" required>
                <option value="Activo">Activo</option>
                <option value="Terminado">Terminado</option>
            </select>
            <button type="submit">Guardar</button>
        </form>
    </div>

    <div class="project-form" id="editProjectForm">
        <button class="close-form" onclick="hideEditForm()">&#x2190;</button>
        <h2>Editar Proyecto</h2>
        <form method="post" asp-page-handler="Edit" onsubmit="return validateEditProjectForm()">
            <input type="hidden" name="ProjectDTO.IdProject" id="ProjectDTO_IdProject" />
            <label for="ProjectDTO_Name">Nombre del Proyecto</label>
            <input type="text" id="ProjectDTO_Name" name="ProjectDTO.Name" required maxlength="50">
            <label for="ProjectDTO_StartDate">Fecha de Inicio</label>
            <input type="date" id="ProjectDTO_StartDate" name="ProjectDTO.StartDate" required readonly
                onfocus="this.removeAttribute('readonly');">
            <label for="ProjectDTO_EndDate">Fecha de Cierre</label>
            <input type="date" id="ProjectDTO_EndDate" name="ProjectDTO.EndDate" required readonly
                onfocus="this.removeAttribute('readonly');">
            <label for="ProjectDTO_Status">Estatus</label>
            <select id="ProjectDTO_Status" name="ProjectDTO.Status" required>
                <option value="Activo">Activo</option>
                <option value="Terminado">Terminado</option>
            </select>
            <button type="submit">Guardar</button>
        </form>
    </div>

    <div class="profile-form" id="userProfileForm">
        <h2>Detalles Perfil</h2>
        <div class="profile-icon">
            <img src="/images/ICON-PROFILEUSER.png" alt="Icono de perfil">
        </div>
        <form id="modifyUserProfileForm" onsubmit="return modifyUserProfile()">
            <div class="form-row">
                <div class="form-group">
                    <label for="Nombre">Nombre:</label>
                    <input type="text" id="Nombre" name="Nombre" required maxlength="15">
                </div>
                <div class="form-group">
                    <label for="ApellidoPaterno">Apellido Paterno:</label>
                    <input type="text" id="ApellidoPaterno" name="ApellidoPaterno" required maxlength="15">
                </div>
                <div class="form-group">
                    <label for="ApellidoMaterno">Apellido Materno:</label>
                    <input type="text" id="ApellidoMaterno" name="ApellidoMaterno" required maxlength="15">
                </div>
                <div class="form-group">
                    <label for="Correo">Correo:</label>
                    <input type="email" id="Correo" name="Correo" required maxlength="50">
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="Apodo">Apodo:</label>
                    <input type="text" id="Apodo" name="Apodo" required maxlength="15">
                </div>
                <div class="form-group">
                    <label for="Contraseña">Contraseña:</label>
                    <input type="password" id="Contraseña" name="Contraseña" required maxlength="20">
                </div>
                <div class="form-group">
                    <label for="ConfirmacionContraseña">Confirmación de Contraseña:</label>
                    <input type="password" id="ConfirmacionContraseña" name="ConfirmacionContraseña" required maxlength="20">
                </div>
            </div>

            <div class="form-buttons">
                <button type="button" class="cancel-button" onclick="hideUserProfileForm()">Cancelar</button>
                <button type="submit" class="modify-button">Modificar</button>
            </div>
        </form>
    </div>

    @if (TempData["ErrorMessage"] != null && TempData["ErrorTitle"] != null)
    {
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                Swal.fire({
                    icon: "error",
                    title: "@TempData["ErrorTitle"]",
                    text: "@TempData["ErrorMessage"]"
                });
            });
        </script>
    }

    @if (TempData["Message"] != null && TempData["Title"] != null)
    {
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                Swal.fire({
                    icon: "success",
                    title: "@TempData["Title"]",
                    text: "@TempData["Message"]",
                });
            });
        </script>
    }

    <script>
        var token = '@Html.Raw(Model.Token)';

        function showNewForm() {
            document.getElementById('newProjectForm').style.display = 'block';
        }

        function hideNewForm() {
            document.getElementById('newProjectForm').style.display = 'none';
        }

        function showEditForm(id, name, startDate, endDate, status) {
            document.getElementById('editProjectForm').style.display = 'block';
            document.getElementById('ProjectDTO_IdProject').value = id;
            document.getElementById('ProjectDTO_Name').value = name;
            document.getElementById('ProjectDTO_StartDate').value = formatDateForInput(startDate);
            document.getElementById('ProjectDTO_EndDate').value = formatDateForInput(endDate);
            document.getElementById('ProjectDTO_Status').value = status;
        }

        function formatDateForInput(dateString) {
            if (dateString.match(/^\d{4}-\d{2}-\d{2}$/)) {
                return dateString;
            }

            const dateParts = dateString.split(' ')[0].split('/');
            if (dateParts.length === 3) {
                const day = dateParts[0];
                const month = dateParts[1];
                const year = dateParts[2];
                return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;
            }

            console.error("Fecha inválida:", dateString);
            return '';
        }



        function hideEditForm() {
            document.getElementById('editProjectForm').style.display = 'none';
        }

        function hideUserProfileForm() {
            document.getElementById('userProfileForm').style.display = 'none';
        }

        function ShowUserProfileForm() {
            document.getElementById('userProfileForm').style.display = 'block';
            loadUserProfile();
        }

        function loadUserProfile() {
            var studentID = '@Model.StudentID';

            $.ajax({
                url: '/TeamHub/Users/GetUserInformation/' + studentID,
                type: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + token
                },
                success: function (response) {
                    console.log(JSON.stringify(response))
                    document.getElementById('Nombre').value = response.name || '';
                    document.getElementById('ApellidoPaterno').value = response.middleName || '';
                    document.getElementById('ApellidoMaterno').value = response.lastName || '';
                    document.getElementById('Correo').value = response.email || '';
                    document.getElementById('Apodo').value = response.surName || '';
                    document.getElementById('Contraseña').value = response.password || '';
                    document.getElementById('ConfirmacionContraseña').value = response.Password || '';
                },
                error: function () {
                    Swal.fire("Error!", "Failed to load user profile.", "error");
                }
            });
        }

        function DeleteProject(id) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/TeamHub/Projects/DeleteProject/" + id,
                        type: "DELETE",
                        headers: {
                            'Authorization': 'Bearer ' + token
                        },
                        success: function (response) {
                            if (response) {
                                Swal.fire("Deleted!", "Your file has been deleted.", "success")
                                    .then(() => {
                                        location.reload();
                                    });
                            } else {
                                Swal.fire("Error!", "Failed to delete the file.", "error");
                            }
                        },
                        error: function () {
                            Swal.fire("Error!", "Failed to delete the file.", "error");
                        }
                    });
                }
            });
        }

        function modifyUserProfile() {
            var form = document.getElementById('modifyUserProfileForm');

            var nombre = form.querySelector('#Nombre').value.trim();
            var apellidoPaterno = form.querySelector('#ApellidoPaterno').value.trim();
            var apellidoMaterno = form.querySelector('#ApellidoMaterno').value.trim();
            var correo = form.querySelector('#Correo').value.trim();
            var apodo = form.querySelector('#Apodo').value.trim();
            var contrasena = form.querySelector('#Contraseña').value.trim();
            var confirmacionContrasena = form.querySelector('#ConfirmacionContraseña').value.trim();

            if (!nombre || !apellidoPaterno || !apellidoMaterno || !correo || !apodo || !contrasena || !confirmacionContrasena) {
                Swal.fire("Campos invalidos", "Por favor, complete todos los campos", "warning");
                return false;
            }

            if (contrasena !== confirmacionContrasena) {
                Swal.fire("Contrasena incorrectas", "Las contrasenas no coinciden", "warning");
                return false;
            }

            var studentDTO = {
                IdStudent: '@Model.StudentID',
                Name: nombre,
                MiddleName: apellidoPaterno,
                LastName: apellidoMaterno,
                SurName: apodo,
                Email: correo,
                Password: contrasena
            };

            $.ajax({
                url: '/TeamHub/Users/Edit',
                type: 'PUT',
                contentType: 'application/json',
                headers: {
                    'Authorization': 'Bearer ' + token
                },
                data: JSON.stringify(studentDTO),
                success: function (response) {
                    Swal.fire("¡Éxito!", "Perfil actualizado correctamente.", "success")
                        .then(() => {
                            hideUserProfileForm();
                        });
                },
                error: function () {
                    Swal.fire("Error!", "Error al actualizar el perfil.", "error");
                }
            });

            return false;
        }

        function validateNewProjectForm() {
            return validateForm('newProjectForm');
        }

        function validateEditProjectForm() {
            return validateForm('editProjectForm');
        }

        function validateUserProfileForm() {
            return validateForm('userProfileForm');
        }

        function validateForm(formId) {
            var form = document.getElementById(formId);
            var inputs = form.querySelectorAll('input[required], select[required]');
            for (var i = 0; i < inputs.length; i++) {
                if (inputs[i].value.trim() === '') {
                    Swal.fire("Campos invalidos", "Por favor, complete todos los campos", "warning");
                    return false;
                }
            }
            return true;
        }
    </script>
</body>

</html>
